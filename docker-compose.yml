version: "3.9"

networks:
  app-tier:
    driver: bridge

volumes:
  postgres-data:
  kafka_0_data_s:
  kafka_1_data_s:
  kafka_2_data_s:

services:
  # ---------------- Postgres ----------------
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-tier

  # ---------------- Redis ----------------
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-tier

  # ---------------- Kafka Brokers ----------------
  kafka-0-s:
    image: bitnami/kafka:3.7
    container_name: kafka-0-s
    networks:
      - app-tier
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuy
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0-s:9093,1@kafka-1-s:9093,2@kafka-2-s:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0-s:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_0_data_s:/bitnami/kafka

  kafka-1-s:
    image: bitnami/kafka:3.7
    container_name: kafka-1-s
    networks:
      - app-tier
    ports:
      - "9093:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuy
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0-s:9093,1@kafka-1-s:9093,2@kafka-2-s:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1-s:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_1_data_s:/bitnami/kafka

  kafka-2-s:
    image: bitnami/kafka:3.7
    container_name: kafka-2-s
    networks:
      - app-tier
    ports:
      - "9094:9092"
    environment:
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuy
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0-s:9093,1@kafka-1-s:9093,2@kafka-2-s:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2-s:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    volumes:
      - kafka_2_data_s:/bitnami/kafka

  # ---------------- Kafka UI ----------------
  kafka-ui-s:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-s
    networks:
      - app-tier
    ports:
      - "8080:8080"
    restart: always
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: wizard_test_cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-0-s:9092,kafka-1-s:9092,kafka-2-s:9092
    depends_on:
      - kafka-0-s
      - kafka-1-s
      - kafka-2-s

  # ---------------- User Service ----------------
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8091:8091"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/postgres
      DB_USER: postgres
      DB_PASSWORD: 1234
      KAFKA_BOOTSTRAP: kafka-0-s:9092,kafka-1-s:9092,kafka-2-s:9092
    depends_on:
      - postgres
      - kafka-0-s
      - kafka-1-s
      - kafka-2-s
    networks:
      - app-tier

  # ---------------- Calorie Service ----------------
  calorie-service:
    build: ./calorie-service
    container_name: calorie-service
    ports:
      - "8092:8092"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/postgres
      DB_USER: postgres
      DB_PASSWORD: 1234
      KAFKA_BOOTSTRAP: kafka-0-s:9092,kafka-1-s:9092,kafka-2-s:9092
      KAFKA_GROUP_ID: food-analysis-group
    depends_on:
      - postgres
      - kafka-0-s
      - kafka-1-s
      - kafka-2-s
    networks:
      - app-tier

  # ---------------- API Connection Service ----------------
  api-connection-service:
    build: ./api-conection-service
    container_name: api-connection-service
    ports:
      - "8093:8093"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/postgres
      DB_USER: postgres
      DB_PASSWORD: 1234
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
    networks:
      - app-tier

  # ---------------- FatSecret Service ----------------
  fatsecret-service:
    build: ./FoodSecretApiConnection
    container_name: fatsecret-service
    ports:
      - "8095:8095"
    environment:
      DB_URL: jdbc:postgresql://postgres:5432/postgres
      DB_USER: postgres
      DB_PASSWORD: 1234
      KAFKA_BOOTSTRAP: kafka-0-s:9092,kafka-1-s:9092,kafka-2-s:9092
      KAFKA_GROUP_ID: food-analysis-group
      FATSECRET_CLIENT_ID: e06b193dae2d4c28a821e0079c933be8
      FATSECRET_CLIENT_SECRET: d6f1cb06f45345d38afe76b9319d10d5
      FATSECRET_SCOPE: basic
      FATSECRET_TOKEN_URL: https://oauth.fatsecret.com/connect/token
    depends_on:
      - postgres
      - kafka-0-s
      - kafka-1-s
      - kafka-2-s
    networks:
      - app-tier

  # ---------------- API Gateway ----------------
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8090:8090"
    environment:
      AUTH_SERVICE_URI: http://user-service:8091
      LEDGER_SERVICE_URI: http://calorie-service:8092
      PRODUCT_SERVICE_URI: http://api-connection-service:8093
      FOODSECRET_SERVICE_URI: http://fatsecret-service:8095
      KAFKA_BOOTSTRAP: kafka-0-s:9092,kafka-1-s:9092,kafka-2-s:9092
      KAFKA_CONSUMER_GROUP: ledger-service-consumer
    depends_on:
      - user-service
      - calorie-service
      - api-connection-service
      - kafka-0-s
      - kafka-1-s
      - kafka-2-s
    networks:
      - app-tier